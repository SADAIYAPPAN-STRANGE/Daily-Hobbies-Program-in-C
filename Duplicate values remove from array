#include <stdio.h>  
#include <stdlib.h>  
  
// declare variable  
int i, j;  
  
// definition of the function  
int remove_element ( int *ptr, int num)  
{  
int temp;  
  
// use for loop   
  
for ( i = 0; i < num-1; i++)  
{  
    for (j = i + 1; j < num; j++)  
    {  
        // if statement to check the same number int sorted array  
        if ( *(ptr+i) == *(ptr+j))  
        {  
            temp = *(ptr + j);  
            *(ptr + j) = *(ptr + num - 1);  
            *(ptr + num - 1) = temp;  
            num--;  
        }  
    }  
}     
      
    printf (" After removing the duplicate elements: ");  
    for ( i = 0; i < num; i++)  
    {  
        printf (" %d \t", *(ptr+i));  
    }  
    return 0;  
}  
  
  
int main ()  
{  
    // declare local variable  
    int num, *ptr;  
    printf (" Define the size of the array element: ");  
    scanf (" %d", &num);  
      
    ptr = (int *) malloc (num * sizeof(int));  
      
    printf (" \n Enter the elements of the array: \n");  
    // use for loop to read elements  
    for ( i = 0; i < num; i++)  
    {  
        scanf (" %d", (ptr+i));  
    }  
  
    // call function to print the unique elements  
    remove_element (ptr, num);  
    return 0;  
}  
When we execute the above program in C compiler, it produces the given below output in the console screen.

Define the size of the array element: 10

 Enter the elements of the array:
5
5
6
7
7
8
8
9
10
11
 After removing the duplicate elements:  5       11      6       7       10      8       9
Example 4: Delete Duplicate Elements from a sorted array by creating separate index for same elements

Let's consider an example to display the unique elements from a sorted array by creating extra space for same number of element/ index in the C programming language.

#include <stdio.h>  
#include <conio.h>  
  
/* deleteDuplicate() function to remove same elements 
and return new array size. */  
int deleteDuplicate (int arr[], int num)  
{  
      
    if (num == 0 || num == 1)  
        return num;  
  
  
// store index of next unique element  
int i, j = 0;  
  
// use for loop to find and remove the duplicate elements  
for (i = 0; i < num - 1; i++)  
{  
    if ( arr[i] != arr[i+1])  
    {  
        arr[j++] = arr[i];  
    }     
      
}  
arr[j++] = arr[num -1];  
return j;  
}  
  
  
int main ()  
{  
    int i;  
    // initialize sorted array  
    int arr[] = {5, 10, 10, 15, 15, 20, 25, 25, 30, 30};  
      
    // get the size of the array  
    int num = sizeof(arr) / sizeof(arr[0]);  
      
    /* call deleteDuplicate() function to  
    delete duplicate element and return new size. */  
    num = deleteDuplicate(arr, num);  
      
    printf (" Display the unique elements from the sorted array: \n ");  
    // display the updated element of the sorted array  
    for ( i = 0; i < num; i++)  
    {  
        printf (" %d \t", arr[i]);  
    }  
    return 0;  
}  
